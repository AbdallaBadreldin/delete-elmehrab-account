{"version":3,"sources":["firebaseConfig.js","page/Home.js","page/Delete.js","page/Login.js","page/Test.js","App.js","reportWebVitals.js","index.js"],"names":["app","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","getAuth","database","getDatabase","storage","getStorage","Home","navigate","useNavigate","useEffect","onAuthStateChanged","user","uid","console","log","Delete","signOut","currentUser","getFirestore","handleDeleteAccount","async","deleteUser","alert","error","React","createElement","phoneNumber","onClick","id","Login","setPhoneNumber","useState","otp","setOtp","confirmationResult","setConfirmationResult","show","setShow","onSignInSubmit","e","preventDefault","window","recaptchaVerifier","RecaptchaVerifier","size","callback","response","expired-callback","appVerifier","signInWithPhoneNumber","then","result","catch","onSubmit","type","value","onChange","target","placeholder","confirm","lostItemsPath","foundItemsPath","chatRoomsPath","lostItemsRef","ref","foundItemsRef","chatRoomsRef","onValue","snapshot","array","forEach","profileItem","pathRef","key","pathStor","storRef","storageRef","refr","remove","deleteObject","path","set","userpath","userRef","message","Test","App","Router","Routes","Route","element","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.a0fc0131.chunk.js","sourcesContent":["// firebaseConfig.js\r\nimport { initializeApp } from \"firebase/app\";\r\nimport { getAuth } from \"firebase/auth\";\r\nimport { getDatabase, ref, remove,onValue ,set  } from 'firebase/database';\r\nimport { getStorage, ref as storageRef, deleteObject } from 'firebase/storage';\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyD9TsaBx7lRp9Tfmycx7UFP1s4x5L2P2d4\",\r\n  authDomain: \"my-items-7cb3e.firebaseapp.com\",\r\n  databaseURL: \"https://my-items-7cb3e-default-rtdb.firebaseio.com\",\r\n  projectId: \"my-items-7cb3e\",\r\n  storageBucket: \"my-items-7cb3e.appspot.com\",\r\n  messagingSenderId: \"270447319098\",\r\n  appId: \"1:270447319098:web:89de038eb13ee7a2073d03\",\r\n  measurementId: \"G-YTFJ66NH61\"\r\n};\r\n\r\nconst app = initializeApp(firebaseConfig);\r\nconst auth = getAuth(app);\r\nconst database = getDatabase(app);\r\nconst storage = getStorage(app);\r\nexport { auth , database, ref, remove,onValue, getStorage, storageRef, deleteObject ,storage,set};","import React, { useState, useEffect } from 'react';\r\nimport { onAuthStateChanged } from \"firebase/auth\";\r\nimport { auth } from '../firebaseConfig';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst Home = () => {\r\n  var returnedView = \"\"\r\n  const navigate = useNavigate();\r\n\r\n  const handleNavigateToLogin = () => {\r\n   navigate('/login_mehrab');\r\n  };\r\n\r\n  const handleNavigateToLogout = () => {\r\n    navigate('/delete_mehrab');\r\n  };\r\n\r\n  useEffect(() => {\r\n    onAuthStateChanged(auth, (user) => {\r\n      if (user) {\r\n        // User is signed in, see docs for a list of available properties\r\n        // https://firebase.google.com/docs/reference/js/firebase.User\r\n        const uid = user.uid;\r\n        handleNavigateToLogout()\r\n        console.log(\"uid\", uid)\r\n      } else {\r\n        // User is signed out\r\n        console.log(\"user is logged out\")\r\n        handleNavigateToLogin()\r\n       \r\n        console.log(\"user is logged out\")\r\n      }\r\n    });\r\n\r\n  }, [])\r\n\r\n\r\n}\r\n\r\nexport default Home","import React from 'react';\r\nimport { auth } from '../firebaseConfig';\r\nimport { deleteUser, reauthenticateWithCredential, EmailAuthProvider } from 'firebase/auth';\r\nimport { getFirestore, doc, deleteDoc } from 'firebase/firestore';\r\nimport { RecaptchaVerifier, signInWithPhoneNumber } from 'firebase/auth';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { signOut } from 'firebase/auth';\r\n\r\n\r\nconst Delete = () => {\r\n   signOut(auth);\r\n    const user = auth.currentUser;\r\n    const db = getFirestore();\r\n    // const userDocRef = doc(db, 'users', user.uid);\r\n// Function to set up reCAPTCHA verifier\r\nconst navigate = useNavigate();\r\nfunction handleNavigation(){\r\nnavigate('/');\r\n}\r\n\r\n\r\nconst handleDeleteAccount = async () => {\r\n    if (user) {\r\n      try {\r\n        // Re-authenticate if needed (e.g., with email/password)\r\n        // const credential = EmailAuthProvider.credential(user.email, 'USER_PASSWORD');\r\n\r\n        // Delete user\r\n        // await deleteUser( reauthenticateWithPhoneNumber (user.phoneNumber));\r\n        deleteUser(user)\r\n      \r\n        alert('Account deleted successfully');\r\n        handleNavigation()\r\n      } catch (error) {\r\n        console.error('Error deleting account:', error);\r\n        alert('Error deleting account');\r\n      }\r\n    } else {\r\n      alert('No user is currently signed in');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Are you sure to Delete El Mehrab Account ?\"  {auth.currentUser.phoneNumber} \" ?</h2>\r\n      <button onClick={handleDeleteAccount}>Delete My Account</button>\r\n<br/>\r\n<br/>\r\n<br/>\r\n<br/>\r\n<div id=\"recaptcha-container\"></div>\r\n<br/>\r\n<br/>\r\n<br/>\r\n\r\n      <h2>Delete Another Account</h2>\r\n      <button onClick={handleDeleteAccount}>Delete My Account</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Delete;","\r\nimport React, { useState } from 'react';\r\nimport { auth, database, ref, remove, onValue } from '../firebaseConfig';\r\nimport { RecaptchaVerifier, signInWithPhoneNumber } from \"firebase/auth\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { deleteUser } from 'firebase/auth';\r\nimport { storage, storageRef, deleteObject, set } from '../firebaseConfig'; // Adjust the path as needed\r\nimport { deleteDoc } from 'firebase/firestore';\r\n\r\nconst Login = () => {\r\n  const [phoneNumber, setPhoneNumber] = useState('');\r\n  const [otp, setOtp] = useState('');\r\n  const [confirmationResult, setConfirmationResult] = useState(null);\r\n  const [show, setShow] = useState(true);\r\n  const navigate = useNavigate();\r\n  const handleDeleteAccount = async () => {\r\n    const user = auth.currentUser;\r\n\r\n    if (!user) {\r\n      alert('No user is currently signed in');\r\n      navigate('/')\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const lostItemsPath = '/profiles/' + user.uid + '/lostItems'\r\n      const foundItemsPath = '/profiles/' + user.uid + '/foundItems'\r\n      const chatRoomsPath = '/profiles/' + user.uid + '/chatRooms'\r\n\r\n      const lostItemsRef = ref(database, lostItemsPath)\r\n      const foundItemsRef = ref(database, foundItemsPath)\r\n      const chatRoomsRef = ref(database, chatRoomsPath)\r\n\r\n      onValue(lostItemsRef, (snapshot) => {\r\n        if(snapshot)\r\n        snapshot.array.forEach(profileItem => {\r\n          var pathRef = \"/lostItems/\" + profileItem.key\r\n          var pathStor = \"/LostItemsImages/\" + profileItem.key\r\n\r\n          var storRef = storageRef(storage, pathStor)\r\n          var refr = ref(database, pathRef)\r\n\r\n          remove(refr)\r\n          deleteObject(storRef);\r\n        });\r\n      })\r\n      onValue(foundItemsRef, (snapshot) => {\r\n        snapshot.array.forEach(profileItem => {\r\n          var pathRef = \"/foundItems/\" + profileItem.key\r\n          var pathStor = \"/FoundItemsImages/\" + profileItem.key\r\n\r\n          var storRef = storageRef(storage, pathStor)\r\n          var refr = ref(database, pathRef)\r\n\r\n          remove(refr)\r\n          deleteObject(storRef);\r\n\r\n        });\r\n      })\r\n      onValue(chatRoomsRef, (snapshot) => {\r\n        snapshot.array.forEach(profileItem => {\r\n          var path = \"/chatRooms/\" + profileItem.key + \"/isDeleted\"\r\n          var pathRef = ref(database, path);\r\n          set(pathRef, true)\r\n        });\r\n      })\r\n      //delete user data\r\n      var userpath = \"/profiles/\" + user.uid\r\n      var userRef = ref(database, userpath);\r\n      remove(userRef)\r\n      // Delete the user account\r\n      await deleteUser(user);\r\n      alert('Account deleted successfully');\r\n      navigate(\"/\");\r\n      // Optionally redirect to login page or home page\r\n    } catch (error) {\r\n      console.error('Error during account deletion:', error);\r\n      alert('Error during account deletion: ' + error.message);\r\n    }\r\n  };\r\n\r\n  const setUpRecaptcha = () => {\r\n    window.recaptchaVerifier = new RecaptchaVerifier(auth, 'recaptcha-container', {\r\n      'size': 'normal',\r\n\r\n      'callback': (response) => {\r\n        console.log(response);\r\n        onSignInSubmit();\r\n      },\r\n      'expired-callback': () => {\r\n        // var navigate = useNavigate();\r\n        // navigate('/login');\r\n      }\r\n    });\r\n  }\r\n\r\n  const onSignInSubmit = (e) => {\r\n    if (e) e.preventDefault();\r\n    setUpRecaptcha();\r\n\r\n    const appVerifier = window.recaptchaVerifier;\r\n    signInWithPhoneNumber(auth, phoneNumber, appVerifier)\r\n      .then((result) => {\r\n        setShow(null)\r\n        setConfirmationResult(result);\r\n        alert(\"OTP has been sent!\");\r\n      }).catch((error) => {\r\n        console.error(error);\r\n        // alert(error)\r\n      });\r\n  };\r\n\r\n  const onOtpSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    confirmationResult.confirm(otp).then((result) => {\r\n      const user = result.user;\r\n      handleDeleteAccount()\r\n      alert(\"Account Is Deleted!! We are going to miss you\");\r\n\r\n    }).catch((error) => {\r\n      console.error(error);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {show && (<div><h2>Phone Authentication Of El Mehrab</h2>\r\n        <form onSubmit={onSignInSubmit}>\r\n          <div>\r\n            <label>Phone Number of El Mehrab</label>\r\n            <input\r\n              type=\"tel\"\r\n              value={phoneNumber}\r\n              onChange={(e) => {\r\n                console.log(\"setPHoneNumber\" + e.target.value)\r\n                setPhoneNumber(e.target.value)\r\n              }\r\n              }\r\n              placeholder=\"+1234567890\"\r\n            />\r\n          </div>\r\n          <button type=\"submit\">Send OTP</button>\r\n          <div id=\"recaptcha-container\"></div>\r\n        </form>  </div>)}\r\n\r\n      {confirmationResult && (\r\n        <form onSubmit={onOtpSubmit}>\r\n          <div>\r\n            <label>OTP</label>\r\n            <input\r\n              type=\"number\"\r\n              value={otp}\r\n              onChange={(e) => {\r\n                console.log(\"OTP\" + e.target.value)\r\n                setOtp(e.target.value)\r\n              }\r\n              }\r\n            />\r\n          </div>\r\n          <button type=\"submit\">Verify OTP</button>\r\n        </form>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;","import React, { Component }  from 'react';\r\n\r\nconst Test = () => {\r\n    \r\n    return (\r\n    <div>\r\n      fsafsa\r\n      <br></br>\r\n    <p>Hi there it's working greatt</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Test;","import React, {useState, useEffect} from 'react';\nimport Home from './page/Home';\nimport Delete from './page/Delete.js';\nimport Login from './page/Login.js';\nimport Test from './page/Test.js';\nimport {BrowserRouter as Router} from 'react-router-dom';\nimport {Routes, Route} from 'react-router-dom';\n \nfunction App() {\n \n  return (\n    <Router>\n      <div>\n        <section>                              \n            <Routes>                                                  npm build\n\n               <Route path=\"/\" element={<Home/>}/>\n               <Route path=\"/login_mehrab\" element={<Login/>}/>\n               <Route path=\"/delete_mehrab\" element={<Delete/>}/>\n               <Route path=\"/Delete-Account_mehrab\" element={<Home/>}/>\n               <Route path=\"/*\" element={<Home/>}/>\n               <Route path=\"/test_mehrab\" element={<Test/>}/>\n            </Routes>                    \n        </section>\n      </div>\n    </Router>\n  );\n}\n \nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}